name: CI/CD

on:
  push:
    branches:
      - main   # or master
  pull_request:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    env:
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}       # SonarQube server URL
      SONAR_LOGIN: ${{ secrets.SONAR_TOKEN }}             # SonarQube token
      DOCKER_USER: ${{ secrets.DOCKER_USERNAME }}         # Docker Hub username
      DOCKER_PASS: ${{ secrets.DOCKER_PASSWORD }}         # Docker Hub password

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # ðŸ”¹ Code Quality Scan (SonarQube)
      - name: SonarQube Scan
        uses: sonarsource/sonarqube-scan-action@v2
        with:
          args: >
            -Dsonar.projectKey=chat-app
            -Dsonar.projectName=chat-app
            -Dsonar.sources=.

      # ðŸ”¹ Set up Docker Buildx (for building and pushing images)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # ðŸ”¹ Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_USER }}
          password: ${{ env.DOCKER_PASS }}

      # ðŸ”¹ Build & Push Backend Image
      - name: Build & Push Backend Image
        uses: docker/build-push-action@v6
        with:
          context: ./backend
          push: true
          tags: ayushpoojari/chatapp-backend:latest

      # ðŸ”¹ Build & Push Frontend Image
      - name: Build & Push Frontend Image
        uses: docker/build-push-action@v6
        with:
          context: ./frontend
          push: true
          tags: ayushpoojari/chatapp-frontend:latest

      # ðŸ”¹ Deploy using docker-compose (optional, only if self-hosted runner)
      - name: Deploy with docker-compose
        if: github.ref == 'refs/heads/main'
        run: |
          docker compose up -d
